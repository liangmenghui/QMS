<template>
        <div>
    <div>
        <Row>
                <i-col>
                    <Form class="query_area" ref="formQuery" :model="formQuery" inline>
                        <Form-item >
                             <Input v-model="formQuery.bsUser" placeholder="请输入发件人邮箱" ></Input>
                        </Form-item>
                        <Form-item >
                            <Button type="primary" @click="handleSubmit('formQuery')">查 询</Button>
                        </Form-item> 
                        <!-- <Form-item >
                            <Button type="primary" @click="showAddDialog()" >新 增</Button>
                        </Form-item> -->
                    </Form>
                </i-col>
            </Row>
        </div>
        <Modal v-model="dialog.modal_dialog"  title="" @on-ok="add" @on-cancel="cancel" >
                <p>
            <div >
                <Row>
                    <i-col>
    <Form :model="formItem" :label-width="80" style="text-align:center"  :ref="dialog.ruleForm" :rules="dialog.ruleForm" >
        <FormItem label="SMTP服务器"  prop='bsSmtpHost'>
            <Row>
                <Col span="12" >
                 <Input v-model="formItem.bsSmtpHost" placeholder="请输入SMTP服务器" ></Input>
                </Col>
           </Row>
        </FormItem>
        <FormItem label="端口号"  prop='bsSmtpPort'>
            <Row>
                <Col span="12" >
                 <Input v-model="formItem.bsSmtpPort" placeholder="请输入端口号" ></Input>
                </Col>
           </Row>
        </FormItem>
        <FormItem label="发送人邮件"  prop='bsUser'>
            <Row>
                <Col span="12" >
                 <Input v-model="formItem.bsUser" placeholder="请输入发送人邮件" ></Input>
                </Col>
           </Row>
        </FormItem>
        <FormItem label="收件人邮箱"  prop='bsInternetAddress'>
            <Row>
                <Col span="12" >
                 <Input v-model="formItem.bsInternetAddress" placeholder="请输入收件人邮箱" ></Input>
                </Col>
           </Row>
        </FormItem>
        <FormItem label="SMTP口令"  prop='bsSmtpPw'>
            <Row>
                <Col span="12" >
                 <Input v-model="formItem.bsSmtpPw" placeholder="请输入SMTP口令" ></Input>
                </Col>
           </Row>
        </FormItem>
        <FormItem label="设备状态" >
                <Row>
                    <Col span="12" >
                        <Select v-model="formItem.bsState"  >
                                <Option value="0" >可用</Option>
                                <Option value="1">不可用</Option>
                        </Select>
                    </Col>
               </Row>
        </FormItem>

    </Form> 
     </i-col>
    </Row>
</div>
</p>
</Modal>

<Modal v-model="dialog.modal_dialog1" title="" @on-ok="update()" @on-cancel="cancel" >
    <p>
<div >
    <Row>
        <i-col>
<Form :model="formItem" :label-width="80" style="text-align:center" >
    <FormItem label="SMTP服务器"  prop='bsSmtpHost'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsSmtpHost" placeholder="请输入SMTP服务器" ></Input>
            </Col>
       </Row>
    </FormItem>
    <FormItem label="端口号"  prop='bsSmtpPort'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsSmtpPort" placeholder="请输入端口号" ></Input>
            </Col>
       </Row>
    </FormItem>
    <FormItem label="实验室邮件"  prop='bsUser'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsUser" placeholder="请输入发送人邮件" ></Input>
            </Col>
       </Row>
    </FormItem>
    <FormItem label="送样人邮箱"  prop='bsInternetAddress'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsInternetAddress" placeholder="请输入收件人邮箱" ></Input>
            </Col>
       </Row>
    </FormItem>
    <FormItem label="实验室SMTP口令"  prop='bsSmtpPw'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsSmtpPw" placeholder="请输入SMTP口令" ></Input>
            </Col>
       </Row>
    </FormItem>
    <FormItem label="送样人SMTP口令"  prop='bsInternetAddressPw'>
        <Row>
            <Col span="12" >
             <Input v-model="formItem.bsInternetAddressPw" placeholder="请输入SMTP口令" ></Input>
            </Col>
       </Row>
    </FormItem>
    <!-- <FormItem label="设备状态" >
            <Row>
                <Col span="12" >
                    <Select v-model="formItem.bsState"  >
                            <Option value="0" >可用</Option>
                            <Option value="1">不可用</Option>
                    </Select>
                </Col>
           </Row>
    </FormItem> -->

</Form> 
</i-col>
</Row>
</div>
</p>
</Modal>

    <Row>
            <i-col span="24">
                <Table :data="datagrid.data.rows" :columns="datagrid.columns" stripe style="height:auto;"></Table>
                <div style="margin: 10px;overflow: hidden">
                    <div style="float: right;">
                        <Page :total="datagrid.data.total" @on-change="changePage"  @on-page-size-change="chageSize"  :current="1" :page-size="datagrid.queryParams.rows" :page-size-opts="datagrid.pagination"  show-total show-elevator show-sizer></Page>
                    </div>
                </div>
            </i-col>
        </Row>
 </div>


</template>
<script>
  import {mapState} from 'vuex'
    export default {
        created(){
          this.getDate();
        },
        computed:{
        ...mapState({
            menuData:state=>state.menuData  
        })
    },
        data () {
            return {
                start:0,
                end:15,
                dialog: {
                    ruleForm: {
                    bsCode: [
                        { required: true, message: '请填写编码', trigger: 'blur' }
                    ],
                    bsName: [
                        { required: true, message: '请填写名称', trigger: 'blur' }
                    ]
                },
                modal_dialog: false,
                modal_dialog1:false
                },
                message: '新增',
                dict: {
                    bsState:[{value: 0, name:'可用'},{value: 1, name:'不可用'}]
                },
                formQuery:
                {
                    bsUser: '',
               
                },
                isShow:false,
                formItem:{
                    id:"",
                    bsSmtpHost:'',
                    bsSmtpPort:'',
                    bsUser:'',
                    bsSmtpPw:'',
                    bsInternetAddress:'',
                    bsSender:''
                },
                datagrid: {
                    queryParams:{
                        page:1,
                        rows:15,
                        pkParent:-1
                    },
                    pagination: [15, 50, 100],
                    data: {rows:[],total:0,rows1:[]},
                    columns: [

                        {
                            title: 'SMTP服务器',
                            key: 'bsSmtpHost'
                        },
                        {
                            title: '端口号',
                            key: 'bsSmtpPort'
                        },
                        {
                            title:'发送信息邮箱',
                            key:'bsSender'
                        },
                        {
                            title: '发送信息邮箱SMTP口令',
                            key: 'bsSmtpPw'
                        },
                        {
                            title: '实验室人邮箱',
                            key: 'bsUser'
                        },
                        
                        {
                            title: '送样人邮箱',
                            key: 'bsInternetAddress'
                        },
                        // {
                        //     title: '送样人SMTP口令',
                        //     key: 'bsInternetAddressPw'
                        // },
                        // {
                        //     title: '启用状态',
                        //     key: 'bsState',
                        //     render: (h, params) => {
                        //         return h('span', this.dict.bsStatus[params.row.bsState].name);
                        //     }
                        // },
                        {
                            title: '创建时间',
                            key: 'bsCreatedTime'
                        },
                        {
                            title: '操作',
                            key: 'action',
                            render: (h, params) => {
                                let ary = [];
                                if(true) {
                                    ary.push(h('Button', {
                                        props: {
                                            type: 'primary',
                                            size: 'small'
                                        },
                                        style: {
                                            marginRight: '5px'
                                        },
                                        on: {
                                            click: () => {
                                                this.showEditDialog(params)
                                            }
                                        }
                                    }, '编辑'));
                                }
                                if(true) {
                                    ary.push(h('Button', {
                                        props: {
                                            type: 'error',
                                            size: 'small'
                                        },
                                        on: {
                                            click: () => {
                                                this.delete(params)
                                            }
                                        }
                                    }, '删除'))
                                }
                                return h('div', ary);
                            }
                        }
                    ]
                },
                }
        },
        
        methods:{
            getDate(){
                this.api.labmail.getlist().then((res) => {
                    if(res.result) {
                        this.datagrid.data.rows = res.data.rows.slice(this.start,this.end);
                        this.datagrid.data.total=res.data.total;
                       }else {
                        this.$Message.error(res.msg);
                      }
                });
             },

             delete:function(params){
                this.$Modal.confirm({
                title: '提示信息',
                content: '<p>是否确定删除？</p>',
                loading: true,
                onOk: () => {
                    this.api.labmail.delete(params.row).then((res)=>{
                        if(res.result) {
                            this.getDate();
                            this.$Message.info('删除成功');
                            this.$Modal.remove();
                        }else {
                            this.$Message.error("删除失败");
                        }
                    });
                }
            });
               },

               showEditDialog(params){
                this.dialog.modal_dialog1= true;

                this.formItem.bsUser=params.row.bsUser;
                this.formItem.bsInternetAddress=params.row.bsInternetAddress;
                this.formItem.bsSmtpHost=params.row.bsSmtpHost;
                this.formItem.bsSmtpPort=params.row.bsSmtpPort;
                this.formItem.bsSmtpPw=params.row.bsSmtpPw;
                this.formItem.bsState=params.row.bsState;
                this.formItem.bsSender=params.row.bsSender;
                this.formItem.id=params.row.id;


               },
               
               add(){
                this.api.labmail.save(this.formItem).then((res) =>{
                    if(res.result){
                        this.getDate();
                        this.$Message.success("添加成功");
                     }
                     if(!res.result){
                      this.$Message.error("失败");
                     }
                    
                }); 
               },
               update(params){
                this.api.labmail.update(this.formItem).then((res) =>{
                    if(res.result){
                        this.getDate();
                        this.$Message.success("更新成功");
                     }
                     if(!res.result){
                      this.$Message.error("名称已存在，请重新添加");
                     }
                    
                });
               
               },
               handleSubmit(){
                this.formQuery.bsUser=this.formQuery.bsUser.trim();
                this.api.labmail.getlist(this.formQuery).then((res) =>{
                    if(res.result) {
                            this.datagrid.data = res.data;
                        }else {
                            this.$Message.error(res.msg);
                        }
                        });
                    
                },
                showAddDialog() {
                  this.dialog.modal_dialog = true;
                  this.dialog.formItem ={};
                },

                changePage (pageSize) {
                    this.start=(pageSize-1)*this.datagrid.queryParams.rows;
                    this.end=pageSize*this.datagrid.queryParams.rows;
                    this.getDate();
                },
                chageSize(pageSizeOpts){
                    this.datagrid.queryParams.rows=pageSizeOpts;
                    this.start=0;
                    this.end=pageSizeOpts;
                    this.getDate();
               }
            
        }
    }
</script>