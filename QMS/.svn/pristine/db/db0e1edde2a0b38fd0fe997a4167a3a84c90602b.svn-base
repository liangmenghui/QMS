package com.unind.qms.web.samplePlan.controller;

import com.unind.base.data.ApiResponseResult;
import com.unind.base.provider.BusinessException;
import com.unind.base.web.Constants;
import com.unind.base.web.WebController;
import com.unind.qms.web.samplePlan.entity.SampleVerificationLevel;
import com.unind.qms.web.samplePlan.service.SampleVerificationLevelService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 * 检验水平
 */
@Api(description = "检验水平模块")
@RestController
@RequestMapping(value = Constants.CONTEXT_PATH  + "/sampleVerificationLevel")
public class SampleVerificationLevelController extends WebController {
    @Autowired
    private SampleVerificationLevelService sampleVerificationLevelService;

    @ApiOperation(value = "新增检验水平", notes = "新增检验水平")
    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public ApiResponseResult add(SampleVerificationLevel sampleVerificationLevel){
        try{
            return sampleVerificationLevelService.add(sampleVerificationLevel);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value = "修改检验水平", notes = "修改检验水平")
    @RequestMapping(value = "/edit", method = RequestMethod.POST)
    public ApiResponseResult edit(SampleVerificationLevel sampleVerificationLevel){
        try{
            return sampleVerificationLevelService.edit(sampleVerificationLevel);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value = "删除检验水平", notes = "删除检验水平")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "ID", dataType = "Long", paramType = "query", defaultValue = "")
    })
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public ApiResponseResult delete(Long id){
        try{
            return sampleVerificationLevelService.delete(id);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value = "获取检验水平", notes = "获取检验水平")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "bsLevelName", value = "检验水平名称", dataType = "String", paramType = "query", defaultValue = "")
    })
    @RequestMapping(value = "/getlist", method = RequestMethod.GET)
    public ApiResponseResult getlist(String bsLevelName){
        try{
            Sort sort = new Sort(Sort.Direction.DESC, "id");
            return sampleVerificationLevelService.getlist(bsLevelName, super.getPageRequest(sort));
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

}
