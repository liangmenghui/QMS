package com.unind.qms.web.product.controller;

import com.unind.base.data.ApiResponseResult;
import com.unind.base.provider.BusinessException;
import com.unind.base.web.Constants;
import com.unind.base.web.WebController;
import com.unind.qms.web.product.entity.ProductExtra;
import com.unind.qms.web.product.service.ProductExtraService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@Api(description = "产品资料详情模块")
@CrossOrigin(origins = "*", maxAge = 3600)
@RestController
@RequestMapping(value = Constants.CONTEXT_PATH  + "/productExtra")
public class ProductExtraController  extends WebController {
    @Autowired
    private ProductExtraService productExtraService;

    @ApiOperation(value="新增产品详情", notes="新增产品详情")
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public ApiResponseResult add(ProductExtra productExtra) {
		try {
			return productExtraService.add(productExtra);
		} catch (BusinessException e) {
			e.printStackTrace();
			return ApiResponseResult.failure(e.getMessage());
		}
	}

    @ApiOperation(value="修改产品详情", notes="修改产品详情")
    @RequestMapping(value = "/edit", method = RequestMethod.POST)
    public ApiResponseResult edit(ProductExtra productExtra) {
        try {
            return productExtraService.edit(productExtra);
        } catch (BusinessException e) {
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value="删除产品详情", notes="删除产品详情")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "ID", dataType = "Long", paramType="query", defaultValue=""),
    })
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public ApiResponseResult delete(Long id) {
        try {
            if(null!=id && id==-1) {
                return ApiResponseResult.failure("没有删除权限");
            }
            return productExtraService.delete(id);
        } catch (BusinessException e) {
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value="获取产品详情", notes="获取产品详情")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "产品ID", dataType = "Long", paramType="query",defaultValue=""),
            @ApiImplicitParam(name = "bsIsApprove", value = "是否审批中（0：否，1：是）", dataType = "Integer", paramType="query",defaultValue=""),
            @ApiImplicitParam(name = "bsRiskLevel" ,value = "风险等级", dataType = "Integer", paramType="query",defaultValue="" ),
    })
    @RequestMapping(value = "/getlist", method = RequestMethod.GET)
    public ApiResponseResult getlist(Long id, Integer bsIsApprove, Integer bsRiskLevel) {
        try {
            Sort sort = new Sort(Sort.Direction.DESC,"id");
            return productExtraService.getlist(id, bsIsApprove, bsRiskLevel, super.getPageRequest(sort));
        } catch (BusinessException e) {
            return ApiResponseResult.failure(e.getMessage());
        }
    }
}
