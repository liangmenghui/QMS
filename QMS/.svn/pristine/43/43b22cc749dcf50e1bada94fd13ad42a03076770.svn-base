package com.unind.qms.web.sample.entity;

import com.unind.base.domain.admin.BaseEntity;
import com.unind.base.domain.admin.user.SysUser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.Set;

/**
 * @author chen
 */
@Entity
@Table(name = SampleRecord.TABLE_NAME)
@DynamicUpdate
@ApiModel
public class SampleRecord extends BaseEntity {
    private static final long serialVersionUID = 7151771262953316256L;
    public static final String TABLE_NAME = "t_sample_record";

    /**
     * 样品ID
     */
    @ApiModelProperty(name="bsSampleId",required=true,value="样品ID")
    @NotNull
    @Column
    protected Long bsSampleId;

    /**
     * 出货检验报告ID
     */
    @ApiModelProperty(name="bsShipmentId",value="出货检验报告ID")
    @Column
    protected Long bsShipmentId;

    /**
     * 质量检验报告ID
     */
    @ApiModelProperty(name="bsQualityId",value="质量检验报告ID")
    @Column
    protected Long bsQualityId;

    /**
     * 状态
     */
    @ApiModelProperty(name="bsStatus",value="状态")
    @Column
    protected int bsStatus;

    //样品规格记录集合
    @OneToMany(mappedBy = "sampleRecordBy")
    protected Set<SampleRegularRecord> recordSet;

    /**
     * 创建人
     */
    @ApiModelProperty(name="pkCreatedBy",hidden=true,value="创建人")
    @Column
    protected Long pkCreatedBy;

    /**
     * 修改人
     */
    @ApiModelProperty(name="pkModifiedBy",hidden=true,value="修改人")
    @Column
    protected Long pkModifiedBy;

    @ApiModelProperty(name="createdBy",hidden=true,value="创建人--user")
    @ManyToOne
    @JoinColumn(name = "pkCreatedBy", insertable = false, updatable = false)
    @NotFound(action = NotFoundAction.IGNORE)
    protected SysUser createdBy;

    @ApiModelProperty(name="modifiedBy",hidden=true,value="修改人--user")
    @ManyToOne
    @JoinColumn(name = "pkModifiedBy", insertable = false, updatable = false)
    @NotFound(action = NotFoundAction.IGNORE)
    protected SysUser modifiedBy;

    public Long getBsSampleId() {
        return bsSampleId;
    }

    public void setBsSampleId(Long bsSampleId) {
        this.bsSampleId = bsSampleId;
    }

    public Long getBsShipmentId() {
        return bsShipmentId;
    }

    public void setBsShipmentId(Long bsShipmentId) {
        this.bsShipmentId = bsShipmentId;
    }

    public Long getBsQualityId() {
        return bsQualityId;
    }

    public void setBsQualityId(Long bsQualityId) {
        this.bsQualityId = bsQualityId;
    }

    public int getBsStatus() {
        return bsStatus;
    }

    public void setBsStatus(int bsStatus) {
        this.bsStatus = bsStatus;
    }

    public Set<SampleRegularRecord> getRecordSet() {
        return recordSet;
    }

    public void setRecordSet(Set<SampleRegularRecord> recordSet) {
        this.recordSet = recordSet;
    }

    public Long getPkCreatedBy() {
        return pkCreatedBy;
    }

    public void setPkCreatedBy(Long pkCreatedBy) {
        this.pkCreatedBy = pkCreatedBy;
    }

    public Long getPkModifiedBy() {
        return pkModifiedBy;
    }

    public void setPkModifiedBy(Long pkModifiedBy) {
        this.pkModifiedBy = pkModifiedBy;
    }

    public SysUser getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(SysUser createdBy) {
        this.createdBy = createdBy;
    }

    public SysUser getModifiedBy() {
        return modifiedBy;
    }

    public void setModifiedBy(SysUser modifiedBy) {
        this.modifiedBy = modifiedBy;
    }
}
