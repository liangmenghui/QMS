package com.unind.qms.web.supplier.controller;

import com.unind.base.data.ApiResponseResult;
import com.unind.base.provider.BusinessException;
import com.unind.base.web.Constants;
import com.unind.base.web.WebController;
import com.unind.qms.web.supplier.entity.SupplierPromote;
import com.unind.qms.web.supplier.service.SupplierPromoteService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/**
 *供应商改进提高项目
 * @author Shen
 */
@Api(description = "供应商改进提高项目模块")
@RestController
@RequestMapping(value = Constants.CONTEXT_PATH  + "/supplierPromote")
public class SupplierPromoteController extends WebController {
    @Autowired
    private SupplierPromoteService supplierPromoteService;

    @ApiOperation(value="新增供应商改进提高项目", notes="新增供应商改进提高项目")
    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public ApiResponseResult add(SupplierPromote supplierPromote){
        try {
            return supplierPromoteService.add(supplierPromote);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value="修改供应商改进提高项目", notes="修改供应商改进提高项目")
    @RequestMapping(value = "/edit", method = RequestMethod.POST)
    public ApiResponseResult edit(SupplierPromote supplierPromote){
        try {
            return supplierPromoteService.edit(supplierPromote);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value="删除供应商改进提高项目", notes="删除供应商改进提高项目")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "ID", dataType = "Long", required = true, paramType="query", defaultValue="")
    })
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public ApiResponseResult delete(Long id){
        try {
            return supplierPromoteService.delete(id);
        }catch (BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

    @ApiOperation(value = "获取供应商改进提高项目", notes = "获取供应商改进提高项目")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "ID", dataType = "Long", paramType="query", defaultValue=""),
            @ApiImplicitParam(name = "bsItemsRecordId", value = "审核项目记录ID", dataType = "Long", paramType="query", defaultValue="")
    })
    @RequestMapping(value = "/getlist", method = RequestMethod.GET)
    public ApiResponseResult getlist(Long id, Long bsItemsRecordId){
        try{
            Sort sort = new Sort(Sort.Direction.DESC, "id");
            return supplierPromoteService.getlist(id, bsItemsRecordId, super.getPageRequest(sort));
        }catch(BusinessException e){
            e.printStackTrace();
            return ApiResponseResult.failure(e.getMessage());
        }
    }

}
