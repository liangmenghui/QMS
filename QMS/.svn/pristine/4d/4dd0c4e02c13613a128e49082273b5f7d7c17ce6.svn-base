<style scoped>
    .expand-row{
        margin-bottom: 0px;
    }
</style>
<template>
    <div>
    <Form  :label-width="80">
        <Row class="expand-row">
            <Col span="8">
                <Form-item label="测试项"  >
                    <Select v-model='row.testx'  @on-change='changeTestx'>
                            <Option v-for="x in testxList" :value="x" :key='x' >{{x}}</Option>
                    </Select>
                </Form-item>
            </Col>
            <Col span="8">
                <Form-item label="可用设备">
                        <Select v-model='row.eqName'  @on-change='changeEqName'>
                                <Option v-for="x in eqNameList" :value="x" :key='x' >{{x}}</Option>
                        </Select>
                </Form-item>
            </Col> 
            <Col span="8">
                <Form-item label="测试时间">
                    <Input v-model="row.testTime" placeholder="请输入..." readonly="readonly"></Input>
                </Form-item>
            </Col>
        </Row>
        <Row>
            <Col span="24" v-if="visible" align="center">
                <Button type="primary" size="small" @click="handleCancel">取 消</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <Button type="primary" size="small" @click="handleSubmit">保 存</Button>
            </Col>
        </Row>
    </Form>
    </div>
</template>
<script>
    export default {
        props: {
            data: Object
        },
        data() {
            return {
                visible:true,
                testxList:[],
                testx:'',
                testTime:0,
                eqName:'',
                eqNameList:[],

            formQuery:{
                testx:'',
                eqName:''
            }

        }
            
        },
        created() {
            this.row = this.data.row;
            this.selectTest();
            this.index = this.data.index;
        },
        
        methods: {
            //保存
            handleSubmit() {
                this.$emit("returnadd", this.data);
            },
            //取消
            handleCancel() {
                this.$emit("returncancle", this.data);
            },
            //查询测试项
            selectTest(){
                this.api.equipment.selectTest().then((res)=> {
                     if(res.result){                   
                         this.testxList=res.data.rows;
                     }
           
                })
            },
            changeTestx(){ 
                this.formQuery.testx=this.row.testx;
                this.eqNameList=[];
                this.api.equipment.selectEablee(this.formQuery).then((res) =>{
                    if(res.data.total==0){
                       this.$Message.error('这个测试项的设备处于不可用状态！');
                     }else{
                         for(let i=0;i<res.data.rows.length;i++){
                             this.eqNameList.push(res.data.rows[i].eqName);
                         }
                     this.changeEqName();
                     }                          
                });
             },
            changeEqName(){
                this.formQuery.testx=this.row.testx;   
                this.formQuery.eqName=this.row.eqName;
                if(this.formQuery.eqName !=undefined && this.formQuery.eqName !=''){
                this.api.equipment.selectTime(this.formQuery).then((res) =>{ 
                    if(res.result){
                        this.row.testTime=0;
                        this.row.testTime=res.data.rows[0].testTime;
                    }else{
                        this.$Message.error('查询有误');
                    }                                               
                  });
                }
         
             },
        }
    };
</script>