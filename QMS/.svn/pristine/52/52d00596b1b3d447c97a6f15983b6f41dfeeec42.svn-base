<template>
        <div>
    <div>
        <Row>
                <i-col>
                    <Form class="query_area" ref="formQuery" :model="formQuery" inline>
                            <Form-item >
                                    <Input v-model="formQuery.testx" placeholder="请输入测试项" ></Input>
                                </Form-item>
                        <Form-item >
                            <Button type="primary" @click="handleSubmit()">查 询</Button>
                        </Form-item>
                        <Form-item v-if="menuData.perms.ADD">
                            <Button type="primary" @click="showAddDialog()" >新 增</Button>
                        </Form-item>
                    </Form>
                </i-col>
            </Row>
        </div>
        <Modal v-model="dialog.modal_dialog" title="" @on-ok="t" @on-cancel="cancel" >
                <p>
            <div >
                <Row>
                    <i-col>
    <Form :model="formItem" :label-width="100" style="text-align:center" :ref="dialog.ruleForm" :rules="dialog.ruleForm">
            <FormItem label="设备名称" prop="eqName" >
                    <Row>
                        <Col span="12" >
                            <Select v-model="formItem.eqName" @on-change=change() >
                                    <Option v-for="item in formItem.arry"  :key="item.eqName" :value="item.eqName"  >{{item.eqName}}</Option>
                            </Select>
                        </Col>
                   </Row>
                </FormItem>
                <!-- <FormItem label="设备编码" prop="eqCode" >
                        <Row>
                            <Col span="12" >
                                <Select v-model="formItem.eqCode"  >
                                        <Option v-for="item in formItem.arry1" :value="item.eqCode"  >{{item.eqCode}}</Option>
                                </Select>
                            </Col>
                       </Row>
                    </FormItem>  -->
                <FormItem label="测试项" prop="testx" >
                        <Row>
                            <Col span="12" >
                             <Input v-model="formItem.testx" placeholder="请输入测试项"></Input>
                            </Col>
                       </Row>
                    </FormItem>
                    <FormItem label="测试时间(分钟)"  >
                            <Row>
                                <Col span="12" >
                                    <InputNumber v-model="formItem.testTime"  style="width: 200px"  placeholder="请输入测试时间" />
                                </Col>
                           </Row>
                        </FormItem>
    </Form> 
     </i-col>
    </Row>
</div>
</p>
</Modal>


<Modal v-model="dialog.modal_dialog1" title="" @on-ok="update" @on-cancel="cancel" >
        <p>
    <div >
        <Row>
            <i-col>
<Form :model="formItem" :label-width="100" style="text-align:center" >
     <!-- <FormItem label="设备编码"  >
            <Row>
                <Col span="12" >
                            <Input v-model="formItem.eqCode" placeholder="" disabled="disabled"></Input>
                </Col>
           </Row>
        </FormItem>  -->
        <FormItem label="设备名称"  >
                <Row>
                    <Col span="12" >
                        <Input disabled="disabled"  v-model="formItem.eqName" placeholder="请输入测试项" ></Input>
                    </Col>
               </Row>
            </FormItem>
        
         
        <FormItem label="测试项"  >
                <Row>
                    <Col span="12" >
                     <Input v-model="formItem.testx" placeholder="请输入测试项" ></Input>
                    </Col>
               </Row>
            </FormItem>
            <FormItem label="测试时间(分钟)"  >
                    <Row>
                        <Col span="12" >
                         <InputNumber v-model="formItem.testTime"  style="width: 200px"  placeholder="请输入测试时间" />
                        </Col>
                   </Row>
                </FormItem>
</Form> 
</i-col>
</Row>
</div>
</p>
</Modal>
    <Row>
            <i-col span="24">
                <Table :data="datagrid.data.rows" :columns="datagrid.columns" stripe style="height:auto;"></Table>
                <div style="margin: 10px;overflow: hidden">
                    <div style="float: right;">
                        <Page :total="datagrid.data.total"   @on-change="changePage"  @on-page-size-change="chageSize" :current="1" :page-size="datagrid.queryParams.rows" :page-size-opts="datagrid.pagination"  show-total show-elevator show-sizer></Page>
                    </div>
                </div>
            </i-col>
        </Row>
 </div>


</template>
<script>
  import {mapState} from 'vuex'
    export default {
        created(){
            this.getData();
        },
        computed:{
        ...mapState({
            menuData:state=>state.menuData  
        })
    },
        data () {
            return {
                start:0,
                end:15,
                dialog: {
                    ruleForm: {
                    eqCode: [
                        { required: true, message: '请填写编码', trigger: 'blur' }
                    ],
                    eqName: [
                        { required: true, message: '请填写名称', trigger: 'blur' }
                    ],
                    testx: [
                        { required: true, message: '请填写测试项', trigger: 'blur' }
                    ]
                },
                modal_dialog: false,
                modal_dialog1:false
                },
                

                formQuery:
                {
                eqCode: '',
                eqName: '',
                testx:''
                },

                formItem:{
                    isreadonly:false,
                    arry:[],
                    arry1:[],
                eqName:"",
                eqCode:"",
                eqState:'',
                eqManager:"",
                eqPosition:"",
                id:""
                },
                datagrid: {
                queryParams:{
                    page:1,
                    rows:15,
                    pkParent:-1
                },
                pagination: [15, 50, 100],
                data: {rows:[],total:0,rows1:[]},
                columns: [
                    // {
                    //     title: '设备编码',
                    //     key: 'eqCode'
                    // },
                    {
                        title: '设备名称',
                        key: 'eqName'
                    },
                    {
                        title: '测试项',
                        key: 'testx'
                    },
                    {
                        title: '测试时间',
                        key: 'testTime'
                    },
                   
                    {
                        title: '操作',
                        key: 'action',
                        render: (h, params) => {
                            let ary = [];
                            if(this.menuData.perms.EDIT) {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.showEditDialog(params)
                                        }
                                    }
                                }, '编辑'));
                            }
                            if(this.menuData.perms.DELETE) {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'error',
                                        size: 'small'
                                    },
                                    on: {
                                        click: () => {
                                            this.delete(params)
                                        }
                                    }
                                }, '删除'))
                            }
                            return h('div', ary);
                        }
                    }
                ]
            },
            }
        },
        
        methods:{
            getData(){
                this.api.equipment.selectTesto().then((res) => {
                    if(res.result) {
                        this.datagrid.data.rows1=this.datagrid.data.rows;
                        this.datagrid.data.rows = res.data.rows.slice(this.start,this.end);
                        this.datagrid.data.total=res.data.total;
                       }else {
                        this.$Message.error(res.msg);
                      }
              });
            },
            
            change(){
                this.api.equipment.selectEquipmet1(this.formItem).then((res) => {
                this.formItem.arry1=res.data.rows;
        });
                
            },
        showAddDialog() {
            this.formItem.eqName="";
            this.formItem.testx="";
            this.dialog.modal_dialog = true;
            this.api.equipment.selectEquipmet().then((res) => {
                this.formItem.arry=res.data.rows;
           console.log(res.data.rows);
    
        });

        },

        cancel () {
            
        },
        t(){
            if(this.formItem.eqName==''||this.formItem.testx==''){
                return this.$Message.error('填写信息有误');
            }else{
                this.formItem.testx=this.formItem.testx.trim();
            this.api.equipment.addtest(this.formItem).then((res) =>{
              
                          this.getData();
                          this.$Message.success("添加成功");
                     
            });
        }
        },

        delete:function(params){
            this.$Modal.confirm({
                title: '提示信息',
                content: '<p>是否确定删除？</p>',
                loading: true,
                onOk: () => {
                    this.api.equipment.deleteTest(params.row).then((res)=>{
                        if(res.result) {
                            this.getData();
                            this.$Message.success('删除成功');
                            this.$Modal.remove();
                        }else {
                            this.$Message.error("删除失败");
                        }
                    });
                }
            });
               },

         showEditDialog(params){
                
                this.dialog.modal_dialog1= true;
                this.formItem.eqName=params.row.eqName;
                this.formItem.eqCode=params.row.eqCode;
                this.formItem.testx=params.row.testx;
                this.formItem.testTime=params.row.testTime;
                this.formItem.id=params.row.id;
                this.formItem.isreadonly=true;


    },

    update(){
                this.api.equipment.updatess(this.formItem).then((res) =>{
                    this.getData();
                            this.$Message.info('更新成功');
                });
               },
 
    handleSubmit(){
        if(this.formQuery.testx==''){
            this.getData();
        }else{
            this.formQuery.testx=this.formQuery.testx.trim();
        this.api.equipment.selectBycode(this.formQuery).then((res) =>{
            if(res.result) {
                    this.datagrid.data = res.data;
                }else {
                    this.$Message.error(res.msg);
                }
                });
            }
        },
        changePage (pageSize) {
                    this.start=(pageSize-1)*this.datagrid.queryParams.rows;
                    this.end=pageSize*this.datagrid.queryParams.rows;
                    this.getData();
                },
                chageSize(pageSizeOpts){
                    this.datagrid.queryParams.rows=pageSizeOpts;
                    this.start=0;
                    this.end=pageSizeOpts;
                    this.getData();
               }

}   
}
</script>