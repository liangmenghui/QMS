<template>
	<!--
    	作者：offline
    	时间：2018-04-13
    	描述：审核流程管理
    -->
    <div class="ApprovedFlowManagement" v-if="!showRooterView">
            <div>
                <el-Row style="margin-bottom: 10px;">                                 		
                  	<el-input size="medium" style="width:200px;display: inline-block;" v-model="datagrid.queryParams.keyWord" :placeholder="$t('Button.Keyword-search')"></el-input>   
                	<el-button style="padding: 10px 10px;" type="primary" icon="el-icon-search" @click="handleSubmit('formQuery')">
                		{{$t('Button.Inquire')}}
                	</el-button>
					<el-button style="padding: 10px 10px;" type="primary" icon="el-icon-plus" v-perm-add="" @click="showAddDialog()">
						{{$t('Button.Addprocess')}}
					</el-button>             		
                </el-Row>
                <el-Row>
                    <el-col :span="24">
                        <Table :data="datagrid.data.rows" :columns="datagrid.columns">                  
                        </Table>
                        <div style="margin: 10px;overflow: hidden">
                            <div style="float: right;">
                                <Page :total="datagrid.data.total" :current="1" :page-size="datagrid.queryParams.rows" :page-size-opts="datagrid.pagination" @on-change="changePage" show-total show-elevator show-sizer></Page>
                            </div>
                        </div>
                    </el-col>
                </el-Row>
            <Modal v-model="dialog.modal_dialog" :title="$t('ApprovedFlow.ProcessInformation')" @on-ok="ok" @on-cancel="cancel" >
                    <p>
                        <el-form ref="dialog.formItem" :model="dialog.formItem" :rules="dialog.ruleForm" label-width="80" class="addform">
                           <el-form-item :label="$t('ApprovedFlow.Process-M')" prop="bsName" >
                                <el-input v-model="dialog.formItem.bsName"></el-input>
                            </el-form-item>
                            <el-form-item :label="$t('ApprovedFlow.FlowType')" prop="bsType">
                                <el-select v-model="dialog.formItem.bsType">
                                    <el-option :label="$t('approved.type[11]')" :value="11"></el-option>
                                    <el-option :label="$t('approved.type[12]')" :value="12"></el-option>
                                    <el-option :label="$t('approved.type[21]')" :value="21"></el-option>
                                    <el-option :label="$t('approved.type[22]')" :value="22"></el-option>
                                </el-select>
                            </el-form-item>
                            
                           <el-form-item :label="$t('ApprovedFlow.Principal')" prop="bsApprovederId">&nbsp;&nbsp;
                                <el-select v-model="dialog.formItem.bsApprovederId" placeholder="请输入">
                                    <el-option v-for="user in users" :label="user.bsName" :value="user.id" :key="user.id"></el-option>
                                </el-select>
                            </el-form-item>
                            <el-form-item :label="$t('approved.can_yield')" prop="bsCanYield" >
                                <el-select style="width: 280px;" v-model="dialog.formItem.bsCanYield">
                                    <el-option :label="$t('approved.yield[0]')" :value="0"></el-option>
                                    <el-option :label="$t('approved.yield[1]')" :value="1"></el-option>
                                </el-select>
                                <p class="tip">
                                    *(在审核项目未是否能继续进行审核)
                                </p>
                            </el-form-item>
                            
                            <el-form-item label="通过状态" prop="bsApprovedStatus" >
                                <el-select style="width: 280px;" v-model="dialog.formItem.bsApprovedStatus">
                                    <el-option v-for="(item,index) in $t('product.StatusDesc')" :label="$t('product.StatusDesc['+index+']')" :value="index" v-if="dialog.formItem.bsType<=20">
                                    </el-option>
                                    <el-option v-for="(item,index) in $t('supplier.StatusDesc')" :label="$t('supplier.StatusDesc['+index+']')" :value="index" v-if="dialog.formItem.bsType>20&&(index==0||index==7)">
                                    </el-option>                                    
                                </el-select>                               
                                <p class="tip">
                                    *(通过审核后,状态将改为指定状态, 无 则不修改)
                                </p>
                            </el-form-item>
                            <el-form-item label="未过状态" prop="bsRejectStatus" >                               
                                <el-select style="width: 280px;" v-model="dialog.formItem.bsRejectStatus">
                                    <el-option v-for="(item,index) in $t('product.StatusDesc')" :label="$t('product.StatusDesc['+index+']')" :value="index" v-if="dialog.formItem.bsType<=20">
                                    </el-option>
                                    <el-option v-for="(item,index) in $t('supplier.StatusDesc')" :label="$t('supplier.StatusDesc['+index+']')" :value="index" v-if="dialog.formItem.bsType>20&&(index==0||index==7)">
                                    </el-option>
                                </el-select>

                                <p class="tip">
                                    *(未通过审核,状态将改为指定状态, 无 则不修改)
                                </p>
                            </el-form-item>
                            
                            
                        </el-form>
                    </p>
                </Modal>
            </div>
    </div>
    <div v-else-if="showRooterView">
        <router-view></router-view>
    </div>
</template>
<script>
export default {
    data() {
        return {
            showRooterView: false,
            dialog: {
                modal_dialog: false,
                formItem: {
                },
                ruleForm: {
                    bsName: [
                        { required: true, message: '请填写名称', trigger: 'blur' }
                    ],
                    bsType:[
                        { required: true, message: '请填写审核类型', trigger: 'blur'}
                    ],
                    bsApprovederId:[
                        { required: true, message: '请选择负责人', trigger: 'blur'}
                    ]
                    
                }
            },
            datagrid: {
                queryParams:{
                    page:1,
                    rows:25,
                    pkParent:-1
                },
                pagination: [25, 50, 100],
                data: {rows:[],total:0},
                columns: [
                    {
                        title:this.$t('ApprovedFlow.Process-M'),
                        key: 'bsName'
                    },                   
                    {
                        title: this.$t('ApprovedFlow.FlowType'),
                        key: 'bsType',
                        render: (h,params) => {
                            return h('span',this.$t('approved.type['+params.row.bsType+']'));
                        }
                    },
                    {
                        title: this.$t('ApprovedFlow.Principal'),
                        key: 'bsApproveded',
                        render: (h, params) => {
                            return h('span', params.row.approvedBy.bsName)
                        }
                    },
                   
                    {
                        title: this.$t('ApprovedFlow.Operating'),
                        key: 'action',
                        render: (h, params) => {
                            let ary = [];
                            {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small',
                                        disabled: !this.$Util.hasPerm('EDIT')
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.showEditDialog(params)
                                        }
                                    }
                                }, this.$t('Button.Edit')));
                            }
                            {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'error',
                                        size: 'small',
                                        disabled: !this.$Util.hasPerm('DELETE')
                                    },
                                    on: {
                                        click: () => {
                                            this.delete(params)
                                        }
                                    }
                                }, this.$t('Button.Delete')));
                            }
                            return h('div', ary);
                        }
                    }
                ]
            },
            users :[]
        }
    },
    created(){
        this.getData();
        this.showRooterView = this.$route.matched.length>2;
    },
    beforeUpdate:function(){
        this.showRooterView = this.$route.matched.length>2;
    },
    watch: {
        '$route' (to, from) {
            this.showRooterView = to.matched.length>2;
        }
    },
    methods: {
        handleSubmit(name) {         
            this.getData();
        },
        getData() {
            this.api.ApprovedFlow.getlist(this.datagrid.queryParams).then((res) => {
                this.datagrid.data = res.data;
            });

            this.api.user.getlist().then((res)=>{
                this.users = res.data.rows;
            });
        },
        reloadData() {
            this.getData();
        },
        changePage (page) {
            this.datagrid.queryParams.page = page;
            this.datagrid.data = this.getData();
        },
        delete(params) {
            this.$Modal.confirm({
                title: '提示信息',
                content: '<p>是否确定删除？</p>',
                onOk: () => {
                    this.api.ApprovedFlow.delete({id:params.row.id}).then((res)=>{
                        if(res.result) {
                            this.reloadData();
                            this.$Modal.remove();
                            this.$Message.info('删除成功');
                        }else {
                            this.$Message.error(res.msg);   
                        }
                    });
                }
            });
        },
        showAddDialog() {   
            this.dialog.formItem = {
                bsCanYield:0,
                bsApprovedStatus: 0,
                bsRejectStatus:0
            };
            this.dialog.modal_dialog = true;    
        },
        showEditDialog(params) {   
            this.dialog.formItem = this.$Util.formattedParams(params.row);
            this.dialog.formItem.bsApprovederId = this.dialog.formItem.approvedBy.id;
            this.dialog.formItem.index=params.index;
            delete this.dialog.formItem.approvedBy;
            this.dialog.modal_dialog = true;
        },
        ok () {
            this.$refs["dialog.formItem"].validate((valid) => {
                if (valid) {
                    if(typeof(this.dialog.formItem.id)!=undefined && typeof(this.dialog.formItem.id)=="number") {
                        this.api.ApprovedFlow.edit(this.dialog.formItem).then((res) => {
                            this.$store.commit("updateFlowDataStates",Object.assign(this.datagrid.data.rows[this.dialog.formItem.index],this.dialog.formItem));
                            this.$router.push('approvedFlowManagement/flowSettings');
                        });
                    }else {
                        this.api.ApprovedFlow.add(this.dialog.formItem).then((res) => {
                            res.data.approvedBy = {bsName:'administrator'};
                            this.$store.commit("updateFlowDataStates",res.data);
                            this.$router.push('approvedFlowManagement/flowSettings');
                        });
                    }
                } else {
                    this.$Message.info(this.$t('Error.ParamsRequire'));
                }
            });
        },
        cancel () {
            
        },
    }
}
</script>
<style lang="less">
	@import "../public.less";
  .el-textarea__inner{
    width: 85%;
  }

  .el-form-item {
    margin-bottom: 14px;
}

.searchbox{  
  width: 100%;
  height: 40px;
}

.ivu-input {
    margin-top: 14px;
    display: inline-block;
    width: 200px;
    height: 38px;
    padding: 11px 10px;
    font-size: 12px;
    border: 1px solid #dddee1;
    /*border-radius: 4px;*/
    color: #495060;
    background-color: #fff;
    background-image: none;
    position: relative;
    cursor: text;
    /*margin-top:16px;*/
    transition: border .2s ease-in-out,background .2s ease-in-out,box-shadow .2s ease-in-out;}
    .addform{
        width: 480px;
    }
    .addform .el-input{width: 300px}
.searchbtn .el-button{border-radius: 0px;padding: 11px 14px;}
.toolbar .el-form--inline .el-form-item{vertical-align: baseline;}
.tip{margin-left:70px; color:#777;}
</style>