<template>
    <div>
        <ButtonGroup>
            <Button type="primary" size="small" @click="visible=true">批量导入</Button>
        </ButtonGroup>
        <Modal v-model="visible" :loading="loading" @on-ok="handleSubmit" ok-text="保 存" width="980">
            <div class="ivu-import-wrapper">
                <div class="ivu-import-form">
                    <div class="ivu-form-title">
                        <h2>商品编码导入</h2>
                    </div>
                    <Form :label-width="80" class="ivu-form-ctx">
                        <Row :gutter="16">
                            <i-col span="22">
                                <FormItem label="文档路径:">
                                    <i-input v-model="form.path" disabled></i-input>
                                </FormItem>
                            </i-col>
                            <i-col span="2">
                                <Upload ref="upload" :action="upload.action" :before-upload="handleUploadBefore" :on-success='handleUploadSuccess' :on-error='handleUploadError' :on-format-error="handleFormatError" :format="upload.fileType" :show-upload-list="false">
                                    <Button type="ghost" icon="ios-cloud-upload-outline">导入</Button>
                                </Upload>
                            </i-col>
                        </Row>
                    </Form>
                    <Table :data="grid.data" :columns="grid.columns" stripe height="320"></Table>
                </div>
            </div>
        </Modal>
    </div>
</template>
<script>
export default {
  data() {
    return {
      visible: false,
      loading: true,
      upload: {
        action: "/admin/lmp/hs/prodcata/upload",
        fileType: ["xlsx"]
      },
      form: {
        path: ""
      },
      grid: {
        data: [],
        columns: [
          {
            title: "#",
            type: "index",
            width: 60
          },
          {
            title: "一类名称",
            key: "bsFirstCataName"
          },
          {
            title: "二类名称",
            key: "bsSecondCataName"
          },
          {
            title: "商品编码",
            key: "bsHsCode"
          },
          {
            title: "商品名称",
            key: "bsHsName"
          },
          {
            title: "结果",
            key: "checkResult",
            width: 60,
            render: (h, params) => {
              let row = params.row;
              let text = row.checkResult == true ? "成功" : "失败";
              return h(
                "div",
                {
                  style: {
                    color: row.checkResult ? "#19be6b" : "#ed3f14",
                    fontWeight: "bold"
                  }
                },
                text
              );
            }
          },
          {
            title: "错误信息",
            key: "error",
            width: 240
          },
          {
            title: "操作",
            key: "opr",
            width: 80,
            render: (h, params) => {
              let row = params.row;
              if (row.checkResult == true) return;
              return h(
                "Button",
                {
                  props: {
                    size: "small",
                    type: "error"
                  },
                  on: {
                    click: () => {
                      //console.log("1");
                      this.handleRemoveRow(params.index);
                    }
                  }
                },
                "删除"
              );
            }
          }
        ]
      }
    };
  },
  methods: {
    handleSubmit() {
      this.stopClose();
      for (let i = 0; i < this.grid.data.length; i++) {
        let item = this.grid.data[i];
        if (item.checkResult == false) {
          this.$Message.error("含有未处理的错误数据，请处理。");
          return;
        }
      }
      if (this.grid.data.length == 0) {
        this.$Message.error("没有数据,请确认。");
        return;
      }
      this.api.lmp.hs.save(this.grid.data).then(res => {
        if (res.result) {
          this.$Message.info("保存成功");
          this.close();
        } else {
          let errormsg = res.msg ? res.msg : "未知错误";
          this.$Message.error(errormsg);
        }
      });
    },
    handleRemoveRow(index) {
      this.grid.data.splice(index, 1);
    },
    handleUploadBefore(file) {
      let estr = "";
      if (file.name.length >= ".xlsx".length) {
        estr = file.name.substring(file.name.length - ".xlsx".length);
      }
      if (estr.toLowerCase() == ".xlsx") {
        this.form.path = file.name;
        this.grid.data = [];
      }
      return true;
    },
    handleUploadSuccess(response, file, filelist) {
      if (response.result) {
        this.grid.data = response.data;
      } else {
        let errormsg = response.msg ? response.msg : "未知错误";
        this.$Message.error(errormsg);
      }
    },
    handleUploadError(error, file, filelist) {
      let errormsg = "";
      errormsg = error ? JSON.stringify(error) : "上传失败";
      this.$Message.error(errormsg);
    },
    handleFormatError(file) {
      this.$Message.error("文件类型错误，请选择正确格式的Excel文件.");
      return false;
    },
    stopClose() {
      this.loading = false;
      this.$nextTick(() => {
        this.loading = true;
      });
    },
    close() {
      this.visible = false;
      this.$emit("on-close");
    }
  }
};
</script>

<style scoped>
.ivu-import-wrapper {
  margin: 32px 16px 8px 16px;
}
.ivu-import-form {
  padding: 8px 16px;
  background-color: #f8f8f9;
}
.ivu-form-title {
  border-bottom: 1px solid #dddee1;
  letter-spacing: 0.5em;
  margin: 0 0 24px 0;
  padding: 16px;
}
.ivu-form-ctx {
  padding: 0 16px;
}
</style>
