<template>
    <div class="ApprovedTermsManagement">
        <el-Row style="margin-bottom: 10px;">
          	<el-input size="medium" style="width: 200px;display: inline-block;" v-model="formQuery.keyWord" :placeholder="$t('Button.Keyword-search')"></el-input>
          	<el-button style="padding: 10px 10px;" type="primary" icon="el-icon-search" @click="handleSubmit('formQuery')">
          		{{$t('Button.Inquire')}}
          	</el-button>       
          	<el-button style="padding: 10px 10px;" type="primary" icon="el-icon-plus" v-perm-add @click="showAddDialog()">
          		{{$t('Button.Addedterms')}}
          	</el-button>
        </el-Row>
        <el-Row>
            <el-col :span="24">
                <i-table class="Teamtable" border  :data="datagrid.data.rows" :columns="datagrid.columns" stripe :row-class-name="mydefineRow" style="table-layout:fixed;">  
                </i-table>
                <div style="margin: 10px;">
                    <div style="float: right;">
                        <Page :total="datagrid.data.total" :current="1" :page-size="datagrid.queryParams.rows" :page-size-opts="datagrid.pagination" @on-change="changePage" show-total show-elevator show-sizer></Page>
                    </div>
                </div>
            </el-col>
        </el-Row>
    <Modal v-model="dialog.modal_dialog"  :title="$t('New-audit.New-terms')" @on-ok="ok" @on-cancel="cancel" width="750" >
            <p>
                <el-form :inline="true"  ref="dialog.formItem" :model="dialog.formItem" :rules="dialog.ruleForm" label-width="120px" :label-position="labelPosition">
                   <el-form-item :label="$t('New-audit.Article-number')" prop="bsNo">
                        <el-input v-model="dialog.formItem.bsNo"  placeholder="请输入" v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.Terms-name')" prop="bsName">
                        <el-input v-model="dialog.formItem.bsName" placeholder="请输入" v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
					<el-form-item :label="$t('New-audit.Terms-name')+'(EN)'" prop="bsNameEn">
                        <el-input v-model="dialog.formItem.bsNameEn" placeholder="请输入" v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                   <el-form-item :label="$t('New-audit.Terms-type')"  prop="bsType">
                        <el-select v-model="dialog.formItem.bsType" v-bind:disabled="isdisabled" placeholder="请输入" >
                            <el-option :label="$t('approved.auditType[1]')" :value="1"></el-option>
                            <el-option :label="$t('approved.auditType[2]')" :value="2"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.Terms-conditions')" prop="bsContent">
                        <el-input v-model="dialog.formItem.bsContent" type="textarea" placeholder="请输入..." v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.Terms-conditions-E')" prop="bsContentEn">
                        <el-input v-model="dialog.formItem.bsContentEn" type="textarea" placeholder="请输入..." v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.Grading')" prop='bsStandard'>
                        <el-input :autosize="{ minRows: 5}" v-model="dialog.formItem.bsStandard" type="textarea" placeholder="请输入..." v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.Grading-E')" prop='bsStandardEn'>
                        <el-input :autosize="{ minRows: 5}" v-model="dialog.formItem.bsStandardEn" type="textarea" placeholder="请输入..." v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                    <el-form-item :label="$t('New-audit.bsScoreline')" prop="bsScoreLine">                        
						<el-select v-model="dialog.formItem.bsScoreLine"  :placeholder="$t('choose')" >
							<el-option v-for="item in scoreOptions" :value="item.value" :key="item.value" :label="item.label"></el-option> 
						</el-select>                     
                    </el-form-item > 
                    <el-form-item :label="$t('New-audit.Remarks')" prop='bsRemark'>
                        <el-input v-model="dialog.formItem.bsRemark" type="textarea" placeholder="请输入..."v-bind:readonly="isReadOnly"></el-input>
                    </el-form-item>
                </el-form>
            </p>
        </Modal>
    </div>
</template>
<script>
export default {
    data() {
        return {
            readonly: true,
            formQuery: {
                bsNo: '',
            },
            labelPosition:'right',
            isReadOnly:true,
            isdisabled:true,

            dialog: {
                modal_dialog: false,
                formItem: {
                },
                ruleForm: {
                    bsNo: [
                        { required: true, message: '请填写编码', trigger: 'blur' }
                    ],
                    bsName: [
                        { required: true, message: '请填写名称', trigger: 'blur' }
                    ],
                    bsType:[
                        { required: true, message: '请填写条款类型', trigger: 'blur'}
                    ],
                    /*bsContent:[
                        { required: true, message: '请填写条款内容', trigger: 'blur'}
                    ],
                    bsStandard:[
                      {required: true, message: '请填写评分标准', trigger: 'blur'}
                    ]*/
                }
            },
            scoreOptions:[
            {label:'5',value:5},
            {label:'4',value:4},
            {label:'3',value:3},
            {label:'2',value:2},
            {label:'1',value:1},
			{label:'无',value:-1}
            ],
            datagrid: {
                queryParams:{
                    page:1,
                    rows:25,
                    pkParent:-1
                },
                pagination: [25, 50, 100],
                data: {
                    rows:[],total:0
                },
                columns: [
                    {
                        title:this.$t('New-audit.Numbering'),
                        key: 'bsNo',
                        width: 80,
                        align:"center",
                        //className:"Artnumber"
                    },
                    {
                        title: this.$t('New-audit.Terms-name'),
                        key: 'bsName',                        
                        width: 130,
						align:"center",
						render: (h,param) => {
                            if(this.$i18n.locale=='zh-CN'){
                                let content = param.row.bsName;
                                if(content != undefined && content.length>200) {
                                    content = content.substring(0,200);
                                    content+= '....';
                                }
                                return h('span',content);
                            }else if(this.$i18n.locale=='en-US'){
                                let contentEn = param.row.bsNameEn;
                                if(contentEn != undefined && contentEn.length>200) {
                                    contentEn = contentEn.substring(0,200);
                                    contentEn+= '....';
                                }
                                return h('span',contentEn);
                            }
                        }  
                    },
                    {
                        title: this.$t('New-audit.Terms-type'),
                        key: 'bsType',
                        align:"center",
                        width: 100,
                        render: (h,param) => {
                            return h('span',this.$t('approved.auditType['+param.row.bsType+']'));
                        }
                    },
                    {
                        title:this.$t('New-audit.Terms-conditions'),
                        key: 'bsContent',
                        width: 300,
						align:"center",
                        /*className:"bscont"     */ 
                        render: (h,param) => {
                            if(this.$i18n.locale=='zh-CN'){
                                let content = param.row.bsContent;
                                if(content != undefined && content.length>200) {
                                    content = content.substring(0,200);
                                    content+= '....';
                                }
                                return h('span',content);
                            }else if(this.$i18n.locale=='en-US'){
                                let contentEn = param.row.bsContentEn;
                                if(contentEn != undefined && contentEn.length>200) {
                                    contentEn = contentEn.substring(0,200);
                                    contentEn+= '....';
                                }
                                return h('span',contentEn);
                            }
                        }                  
                    },
                    {
                        title:this.$t('New-audit.Grading'),
                        key:'bsStandard',
                        width: 260,    
						align:"center",						
                        /*className:"bscont2",*/
                        render: (h,param) => {
                            if(this.$i18n.locale=='zh-CN'){
                                let content = param.row.bsStandard;
                                if(content != undefined && content.length>200) {
                                    content = content.substring(0,200);
                                    content+= '....';
                                }
                                return h('span',content);
                            }else if(this.$i18n.locale=='en-US'){
                                let contentEn = param.row.bsStandardEn;
                                if(contentEn != undefined && contentEn.length>200) {
                                    contentEn = contentEn.substring(0,200);
                                    contentEn+= '....';
                                }
                                return h('span',contentEn);
                            }
                        }
                    },
                    {
                        title:this.$t('New-audit.bsScoreline'),
                        key:'bsScoreLine',
                        width: 80,
						align:"center",
						render: (h,param) => {
							let scoreLine = param.row.bsScoreLine;
                            if(scoreLine == -1){
                                return h('span',"无");
                            }else return h('span',scoreLine);
                        }
                    },
                    {
                        title:this.$t('New-audit.Remarks'),
                        key:'bsRemark',						
                        
                    },
                    {
                        title:this.$t('New-audit.Operating') ,
                        key: 'action',
                        //align:"center",
                        render: (h, params) => {
                            let ary = [];
                            {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small',
                                        disabled: !this.$Util.hasPerm('EDIT')
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.showEditDialog(params);
                                        }
                                    }
                                }, this.$t('Button.Edit')));
                            }

                            {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small',
                                        disabled: !this.$Util.hasPerm('QUERY')
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.show(params)
                                        }
                                    }
                                }, this.$t('Button.View')));
                            }

                            

                            {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'error',
                                        size: 'small',
                                        disabled: !this.$Util.hasPerm('DELETE')
                                    },
                                    on: {
                                        click: () => {
                                            this.delete(params)
                                        }
                                    }
                                }, this.$t('Button.Delete')));
                            }
                            return h('div', ary);
                        }
                    }
                ]
            }
        }
    },
    created(){
        this.getData();
    },
    methods: {
        handleSubmit(name) { 
            this.getData();
        },
        getData() {
            Object.assign(this.formQuery, this.datagrid.queryParams);
            this.api.Audit.getlist(this.formQuery).then((res) => {
                this.datagrid.data = res.data;
            });
        },
        changePage (page) {
            this.datagrid.queryParams.page = page;
            this.getData();
        },
        delete(params) {
            this.$Modal.confirm({
                title: '提示信息',
                content: '<p>是否确定删除？</p>',
                onOk: () => {

                    this.api.Audit.delete({id:params.row.id}).then((res)=>{
                        //console.log(res)
                        if(res.result) {
                            //refresh
                            this.reloadData();
                            this.$Modal.remove();
                            this.$Message.info('删除成功');
                        }else {
                            this.$Message.error(res.msg);   
                        }
                    });
                }
            });
        },
        showAddDialog() {   
            this.isReadOnly = false;    
            this.dialog.modal_dialog = true;
            this.isdisabled=false;
            this.dialog.formItem = {};
        },
        showEditDialog(params) {
            this.isReadOnly = false;
            this.isdisabled=false;
            this.dialog.modal_dialog = true;
            /*let r = params.row;
            this.dialog.formItem = {
                id:r.id,
                bsNo:r.bsNo, 
                bsName:r.bsName, 
				bsNameEn:r.bsNameEn, 
                bsType:r.bsType,
                bsContent:r.bsContent,
                bsContentEn:r.bsContentEn,
                bsStandard:r.bsStandard,
                bsStandardEn:r.bsStandardEn,
                bsScoreLine:r.bsScoreLine,
                bsRemark:r.bsRemark,
            };*/
        },
		show (params) {
            //let r = params.row;
            this.dialog.formItem = r;
            this.isReadOnly = true;
            this.isdisabled =true;
            this.dialog.modal_dialog = true;
            /*this.dialog.formItem = {
                id:r.id,
                bsNo:r.bsNo, 
                bsName:r.bsName, 
				bsNameEn:r.bsNameEn, 
                bsType:r.bsType,
                bsContent:r.bsContent,
                bsContentEn:r.bsContentEn,
                bsStandard:r.bsStandard,
                bsStandardEn:r.bsStandardEn,
                bsScoreLine:r.bsScoreLine,
                bsRemark:r.bsRemark,
            };*/
        },
        ok () {
            this.$refs["dialog.formItem"].validate((valid) => {
                if (valid) {
                    if(typeof(this.dialog.formItem.id)!=undefined && typeof(this.dialog.formItem.id)=="number") {
                        this.api.Audit.edit(this.dialog.formItem).then((res) => {
                            if(res.result) {
                                this.getData();
                            }else {
                                this.$Message.error(res.msg);
                            }
                        });
                    }else {
                        this.api.Audit.add(this.dialog.formItem).then((res) => {
                            if(res.result) {
                                this.getData();
                            }else {
                                this.$Message.error(res.msg);
                            }
                        });
                    }
                }
                else {
                    this.$Message.info('信息填写不完整');
                }
            });
            
        },
        cancel () {
            
        },
        mydefineRow () {
                return 'bscont';
        }
    }
}
</script>
<style lang="less" scoped>
	@import "../public.less";
 
.el-textarea{width:210px;}
.ivu-input {
    margin-top: 12px;
    display: inline-block;    
    height: 40px;
    padding: 11px 10px;
    font-size: 12px;
    border: 1px solid #dddee1;    
    color: #495060;
    background-color: #fff;
    background-image: none;
    position: relative;
    cursor: text;
    /*margin-top:16px;*/
    transition: border .2s ease-in-out,background .2s ease-in-out,box-shadow .2s ease-in-out;
}



/*.ivu-table td.bscont{
	overflow : hidden;
	text-overflow: ellipsis;
	display: -webkit-box;
   -webkit-line-clamp: 3;
	-webkit-box-orient: vertical;
	height: 100px;
	
}
   

.ivu-table .bscont td{      
	font-size:  12px;
	font-family: "Microsoft YaHei";
	line-height:24px;
}
.ivu-table td.Artnumber{
	font-size:  16px;  font-family: "Arial"; text-align: center;
}
.searchbtn .el-button{
	border-radius: 0px;padding: 11px 14px;
}
.Teamtable .ivu-table-cell{
	white-space: pre-line!important;
	font-size: 14px;

}

/*.el-form-item__content{display: inline-block;}*/
</style>