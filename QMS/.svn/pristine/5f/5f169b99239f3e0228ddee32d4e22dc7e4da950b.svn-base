<template>
    <div>
        <Row>
            <i-col>
                <Form class="query_area" ref="formQuery" :model="formQuery" inline>
                <Row>
                    <i-col span="4">
                        <Form-item label="" prop="bsApplicationName">
                            <AutoComplete
                                v-model="formQuery.bsApplicationName"
                                :data="applications"
                                placeholder="应用名">
                            </AutoComplete>
                        </Form-item>
                    </i-col>
                    <i-col span="4">
                    <Form-item label="" prop="bsCategory">
                        <AutoComplete
                            v-model="formQuery.bsCategory"
                            :data="categories"
                            placeholder="分类">
                        </AutoComplete>
                    </Form-item>
                    </i-col>
                    <i-col span="4">
                        <Form-item label="" prop="bsCode">
                            <Input v-model="formQuery.bsCode" placeholder="编码" />
                        </Form-item>
                    </i-col>
                    <i-col span="4">
                        <Form-item label="" prop="bsEnv">
                            <Input v-model="formQuery.bsEnv" placeholder="应用环境" />
                        </Form-item>
                    </i-col>
                    <i-col span="8">
                        <Form-item>
                            <Button type="primary" @click="handleSubmit('formQuery')">查 询</Button>
                        </Form-item>
                        <Form-item>
                            <Button type="primary" @click="showAddDialog()">新 增</Button>
                        </Form-item>
                    </i-col>
                </Row>
                </Form>
            </i-col>
        </Row>
        <Row>
            <i-col span="24">
                <Table :data="datagrid.data.rows" :columns="datagrid.columns" stripe height="370"></Table>
                <div style="margin: 10px;">
                    <div style="float: right;">
                        <Page :total="datagrid.data.total" :current="1" :page-size="datagrid.queryParams.rows" :page-size-opts="datagrid.pagination" @on-change="changePage" show-total show-elevator show-sizer></Page>
                    </div>
                </div>
            </i-col>
        </Row>
        <Modal v-model="dialog.modal_dialog" title="" @on-ok="ok" @on-cancel="cancel" width="800" >
            <p>
                <Form :model="dialog.formItem" :ref="dialog.ruleForm" :rules="dialog.ruleForm" :label-width="80">
                    <span style="display:none;">
                        <Input v-model="dialog.formItem.id" ></Input>
                    </span>
                    <Row>
                        <i-col span="12">
                            <Form-item label="应用名" prop="bsApplicationName">
                                <AutoComplete
                                    v-model="dialog.formItem.bsApplicationName"
                                    :data="applications"
                                    placeholder="请输入">
                                </AutoComplete>
                            </Form-item>
                        </i-col>
                        <i-col span="12">
                            <Form-item label="分类" prop="bsCategory">
                                <AutoComplete
                                    v-model="dialog.formItem.bsCategory"
                                    :data="categories"
                                    placeholder="请输入">
                                </AutoComplete>
                            </Form-item>
                        </i-col>
                    </Row>
                    <Row>
                        <i-col span="12">
                            <Form-item label="编码" prop="bsCode">
                                <Input v-model="dialog.formItem.bsCode" placeholder="请输入"></Input>
                            </Form-item>
                        </i-col>
                        <i-col span="12">
                            <Form-item label="名称" prop="bsName">
                                <Input v-model="dialog.formItem.bsName" placeholder="请输入"></Input>
                            </Form-item>
                        </i-col>
                    </Row>
                    <Row>
                        <i-col span="24">
                            <Form-item label="参数值" prop="bsValue">
                                <Input v-model="dialog.formItem.bsValue" placeholder="请输入"></Input>
                            </Form-item>
                        </i-col>
                    </Row>
                    <Row>
                        <i-col span="12">
                            <Form-item label="启用状态" prop="bsEnableState">
                                <RadioGroup v-model="dialog.formItem.bsEnableState">
                                    <Radio :label="1">
                                        <span>启 用</span>
                                    </Radio>
                                    <Radio :label="0">
                                        <span>停 用</span>
                                    </Radio>
                                </RadioGroup>
                            </Form-item>
                        </i-col>
                        <i-col span="12">
                            <Form-item label="环境" prop="bsEnv">
                                <RadioGroup v-model="dialog.formItem.bsEnv">
                                    <Radio label="dev">
                                        <span>开发环境</span>
                                    </Radio>
                                    <Radio label="test">
                                        <span>测试环境</span>
                                    </Radio>
                                    <Radio label="prod">
                                        <span>生产环境</span>
                                    </Radio>
                                </RadioGroup>
                            </Form-item>
                        </i-col>
                    </Row>
                    <Row>
                        <i-col span="24">
                    <Form-item label="备注">
                        <Input v-model="dialog.formItem.bsComment" type="textarea" placeholder="请输入..."></Input>
                    </Form-item>
                        </i-col>
                    </Row>
                </Form>
            </p>
        </Modal>
    </div>
</template>
<script>
import {mapState} from 'vuex'
export default {
    data() {
        return {
            applications: [
                "global","scm","pmp","lmp","qms","srm","wms"
            ],
            categories: [
                "system_global"
            ],
            formQuery: {
                bsCode: '',
                bsName: ''
            },
            dialog: {
                modal_dialog: false,
                formItem: {
                },
                ruleForm: {
                    bsApplicationName: [
                        { required: true, message: '请填写应用名', trigger: 'blur' }
                    ],
                    bsEnv: [
                        { required: true, message: '请选择应用环境', trigger: 'blur' }
                    ],
                    bsCode: [
                        { required: true, message: '请填写编码', trigger: 'blur' }
                    ],
                    bsName: [
                        { required: true, message: '请填写备注', trigger: 'blur' }
                    ]
                }
            },
            datagrid: {
                queryParams:{
                    page:1,
                    rows:25,
                    pkParent:-1
                },
                pagination: [25, 50, 100],
                data: {rows:[],total:0},
                columns: [
                    {
                        title: '应用名',
                        key: 'bsApplicationName',
                        align: 'center'
                    },
                    {
                        title: '分类',
                        key: 'bsCategory',
                        align: 'center'
                    },
                    {
                        title: '编码',
                        key: 'bsCode',
                        align: 'center'
                    },
                    {
                        title: '名称',
                        key: 'bsName',
                        align: 'center'
                    },
                    {
                        title: '参数值',
                        key: 'bsValue',
                        align: 'center'
                    },
                    {
                        title: '状态',
                        key: 'bsEnableState',
                        align: 'center'
                    },
                    {
                        title: '应用环境',
                        key: 'bsEnv',
                        align: 'center'
                    },
                    {
                        title: '描述',
                        key: 'bsComment'
                    },
                    {
                        title: '操作',
                        key: 'action',
                        render: (h, params) => {
                            let ary = [];
                            //if(this.menuData.perms.EDIT) {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'primary',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '5px'
                                    },
                                    on: {
                                        click: () => {
                                            this.showEditDialog(params)
                                        }
                                    }
                                }, '编辑'));
                            //}
                            //if(this.menuData.perms.DELETE) {
                                ary.push(h('Button', {
                                    props: {
                                        type: 'error',
                                        size: 'small'
                                    },
                                    on: {
                                        click: () => {
                                            this.delete(params)
                                        }
                                    }
                                }, '删除'))
                            //}
                            return h('div', ary);
                        }
                    }
                ]
            }
        }
    },
    created(){
        
    },
    computed:{
        ...mapState({
            menuData:state=>state.menuData  
        })
    },
    methods: {
        handleSubmit(name) {
            this.getData();
        },
        getData() {
            Object.assign(this.formQuery, this.datagrid.queryParams);
            // console.log(this.formQuery);
            this.api.sysglobalconfig.getlist(this.formQuery).then((res) => {
                if(res.result) {
                    this.datagrid.data = res.data;
                }else {
                    this.$Message.error(res.msg);
                }
            });
        },
        reloadData() {
            this.datagrid.data = this.getData();
        },
        changePage (page) {
            this.datagrid.queryParams.page = page;
            this.datagrid.data = this.getData();
        },
        edit(params) {
            this.api.sysglobalconfig.edit(params.row).then((res)=>{
                if(res.result) {
                    //refresh
                    this.reloadData();
                }else {
                    this.$Message.error(res.msg);
                }
            });
        },
        delete(params) {
            this.$Modal.confirm({
                title: '提示信息',
                content: '<p>是否确定删除？</p>',
                loading: true,
                onOk: () => {
                    this.api.sysglobalconfig.delete({id:params.row.id}).then((res)=>{
                        if(res.result) {
                            //refresh
                            this.reloadData();
                            this.$Message.info('删除成功');
                            this.$Modal.remove();
                        }else {
                            this.$Message.error(res.msg);
                        }
                    });
                }
            });
        },
        showAddDialog() {
            this.dialog.modal_dialog = true;
            this.dialog.formItem = {
                bsEnableState:0,
                bsEnv:"dev"
            };
        },
        showEditDialog(params) {
            this.dialog.modal_dialog = true;
            let r = params.row;
            this.dialog.formItem = {id:r.id,bsApplicationName:r.bsApplicationName,bsCategory:r.bsCategory,bsCode:r.bsCode,bsName:r.bsName,bsValue:r.bsValue,bsEnableState:r.bsEnableState,bsEnv:r.bsEnv, bsComment:r.bsComment};
        },
        ok () {
            if(typeof(this.dialog.formItem.id)!=undefined && typeof(this.dialog.formItem.id)=="number") {
                // this.$refs["dialog.ruleForm"].validate((valid) => {
                //     if (valid) {
                        this.api.sysglobalconfig.edit(this.dialog.formItem).then((res) => {
                            if(res.result) {
                                //refresh
                                this.reloadData();
                            }else {
                                this.$Message.error(res.msg);
                            }
                        });
                //     }
                // });
            }else {
                // this.$refs["dialog.ruleForm"].validate((valid) => {
                //     if (valid) {
                        this.api.sysglobalconfig.add(this.dialog.formItem).then((res) => {
                            if(res.result) {
                                //refresh
                                this.reloadData();
                            }else {
                                this.$Message.error(res.msg);
                            }
                        });
                //     }
                // });
            }
        },
        cancel () {
            
        }
    }
}
</script>
