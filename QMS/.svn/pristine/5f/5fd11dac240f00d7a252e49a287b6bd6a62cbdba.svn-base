package com.unind.qms.web.sample.controller;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.unind.base.data.ApiResponseResult;
import com.unind.base.provider.BusinessException;
import com.unind.base.web.Constants;
import com.unind.base.web.WebController;
import com.unind.qms.web.sample.entity.SampleRecord;
import com.unind.qms.web.sample.entity.SampleRegular;
import com.unind.qms.web.sample.entity.SampleRegularRecord;
import com.unind.qms.web.sample.service.SampleRegularRecordService;
import com.unind.qms.web.sample.service.SampleRegularService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * 样品规格记录
 * @author chen
 *
 */
@Api(description = "样品规格记录模块")
@RestController
@RequestMapping(value=Constants.CONTEXT_PATH + "/sampleRegularRecord")
public class SampleRegularRecordController extends WebController {
	@Autowired
	private SampleRegularRecordService sampleRegularRecordService;

	@ApiOperation(value="新增/编辑样品规格记录", notes="新增/编辑样品规格记录")
	@ApiImplicitParams({
			@ApiImplicitParam(name = "SampleRecord", value = "样品记录字段", dataType = "entity", paramType="query",defaultValue=""),
			@ApiImplicitParam(name = "id", value = "样品规格记录ID(新增不传，编辑传)", dataType = "Long", paramType="query",defaultValue=""),
			@ApiImplicitParam(name = "bsSampleRecordId", value = "样品记录ID(新增不传，编辑传)", dataType = "Long", paramType="query",defaultValue=""),
			@ApiImplicitParam(name = "bsSampleRegularId", value = "样品规格ID", dataType = "Long", paramType="query",defaultValue=""),
			@ApiImplicitParam(name = "bsMeasureResult", value = "测量结果", dataType = "String", paramType="query",defaultValue=""),
			@ApiImplicitParam(name = "bsDesc", value = "备注", dataType = "String", paramType="query",defaultValue=""),
	})
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public ApiResponseResult add(SampleRecord sampleRecord,String sampleRegularRecordStr) {
		try {
			Gson gson = new Gson();
			List<SampleRegularRecord> sampleRegularRecordList = gson.fromJson(sampleRegularRecordStr, new TypeToken<List<SampleRegularRecord>>(){}.getType());
			return sampleRegularRecordService.add(sampleRecord,sampleRegularRecordList);
		} catch (BusinessException e) {
			e.printStackTrace();
			return ApiResponseResult.failure(e.getMessage());
		}
	}

	@ApiOperation(value="删除样品规格记录", notes="删除样品规格记录")
	@ApiImplicitParams({
			@ApiImplicitParam(name = "id", value = "ID", dataType = "Long", paramType="query",defaultValue=""),
	})
	@RequestMapping(value = "/delete", method = RequestMethod.POST)
	public ApiResponseResult delete(Long id) {
		try {
			if(null!=id && id==-1) {
				return ApiResponseResult.failure("没有删除权限");
			}
			return sampleRegularRecordService.delete(id);
		} catch (BusinessException e) {
			return ApiResponseResult.failure(e.getMessage());
		}
	}

	@ApiOperation(value="获取样品规格记录", notes="获取样品规格记录")
	@ApiImplicitParams({
			@ApiImplicitParam(name = "id", value = "ID", dataType = "Long", paramType="query",defaultValue=""),
	})
	@RequestMapping(value = "/getlist", method = RequestMethod.GET)
	public ApiResponseResult getlist(Long id) {
		try {
			Sort sort = new Sort(Sort.Direction.DESC,"id");
			return sampleRegularRecordService.getlist(id, super.getPageRequest(sort));
		} catch (BusinessException e) {
			return ApiResponseResult.failure(e.getMessage());
		}
	}
}
